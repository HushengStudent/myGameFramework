//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Framework_LuaComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Framework.LuaComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddClick", AddClick);
		L.RegFunction("SetSprite", SetSprite);
		L.RegFunction("SetSliderValue", SetSliderValue);
		L.RegFunction("SetGray", SetGray);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ComponentName", get_ComponentName, set_ComponentName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClick(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.AddClick");
#endif
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.LuaComponent obj = (Framework.LuaComponent)ToLua.CheckObject<Framework.LuaComponent>(L, 1);
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.AddClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSprite(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.SetSprite");
#endif
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Framework.LuaComponent obj = (Framework.LuaComponent)ToLua.CheckObject<Framework.LuaComponent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetSprite(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSliderValue(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.SetSliderValue");
#endif
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.LuaComponent obj = (Framework.LuaComponent)ToLua.CheckObject<Framework.LuaComponent>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetSliderValue(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGray(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.SetGray");
#endif
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.LuaComponent obj = (Framework.LuaComponent)ToLua.CheckObject<Framework.LuaComponent>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetGray(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.op_Equality");
#endif
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ComponentName(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.ComponentName");
#endif
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.LuaComponent obj = (Framework.LuaComponent)o;
			string ret = obj.ComponentName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ComponentName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ComponentName(IntPtr L)
	{
#if UNITY_EDITOR
        ToluaProfiler.AddCallRecord("Framework.LuaComponent.ComponentName");
#endif
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Framework.LuaComponent obj = (Framework.LuaComponent)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ComponentName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ComponentName on a nil value");
		}
	}
}

