---
---This code was generated by a tool.
---To coding to do what u want to do.
---
 
require "Panel.View.LoginPanel"
require "Panel.Data.LoginData"
require "Protol.login_pb"

local super = BaseCtrl
local l_value = 1
LoginCtrl = class("LoginCtrl")
 
function LoginCtrl:ctor()
       logGreen("--->>>LoginCtrl:ctor1")
       super.ctor(self)
       logGreen("--->>>LoginCtrl:ctor2")

       self:PrintValue()
end

function LoginCtrl:PrintValue()
       super.PrintValue()
       logGreen("--->>>value:"..tostring(l_value))
end

function LoginCtrl:Awake(msg)
       log("--->>>LoginCtrl Awake be called.")
       local l_panel = LoginPanel.new()
       self.panel = l_panel:BindLuaComponent(msg[0])

       --Test Net
       local login = login_pb.LoginRequest();
       login.id = 2000;
       login.name = 'husheng';
       local msg = login:SerializeToString();
       ----------------------------------------------------------------
       local buffer = luaBuff.New();
       --buffer:WriteShort(10011);
       --buffer:WriteBuffer(msg);
       --networkMgr:SendMessage(buffer);
end
 
function LoginCtrl:Start()
       log("--->>>LoginCtrl Start be called.")
 
end
 
function LoginCtrl:OnEnable()
       log("--->>>LoginCtrl OnEnable be called.")
 
end
 
function LoginCtrl:OnDisable()
       log("--->>>LoginCtrl OnDisable be called.")
 
end
 
function LoginCtrl:OnDestroy()
       log("--->>>LoginCtrl OnDestroy be called.")
 
end
-----------------------------超华丽的分割线-----------------------------
