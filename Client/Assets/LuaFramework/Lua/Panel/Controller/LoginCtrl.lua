-- -
---This code was generated by a tool.
---To coding to do what u want to do.
---

module("UI", package.seeall)

require "Panel.View.LoginPanel"

local super = UI.BaseCtrl

LoginCtrl = class("LoginCtrl",BaseCtrl)

function LoginCtrl:ctor()
    super.ctor(self)

end

function LoginCtrl:OnInitialize(args)
    super.OnInitialize(self,args)
    local l_panel = LoginPanel.new()
    self.panel = l_panel:BindLuaCom(self.go)
    self:OnInitializeEx(args)

end

function LoginCtrl:OnUpdate(interval)
    super.OnUpdate(self,interval)
    self:OnUpdateEx(interval)

end

function LoginCtrl:OnHide()
    super.OnHide(self)
    self:OnHideEx()

end

function LoginCtrl:OnResume()
    super.OnResume(self)
    self:OnResumeEx()

end

function LoginCtrl:UnInitialize()
    super.UnInitialize(self)
    self:UnInitializeEx()

end

-----------------------------///beautiful line///-----------------------------



function LoginCtrl:OnInitializeEx(args)

    --Test Net
    local login = login_pb.LoginRequest()
    login.id = 2000
    login.name = 'husheng'
    local msg = login:SerializeToString()
    ----------------------------------------------------------------
    local buffer = luaBuff.New()
    --buffer:WriteShort(10011)
    --buffer:WriteBuffer(msg)
    --networkMgr:SendMessage(buffer)

end

function LoginCtrl:OnUpdateEx(interval)

end

function LoginCtrl:OnHideEx()

end

function LoginCtrl:OnResumeEx()

end

function LoginCtrl:UnInitializeEx()

end

